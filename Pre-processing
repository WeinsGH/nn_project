# nn_project
Процесс предпроцессинга и подготовки данных для классификации изображений со спутника с использованием датасета EuroSAT и
модели ResNet18/50/101/152 может быть разделен на следующие шаги:

1. Загрузка данных:

Сначала, мы загрузили архив с данными EuroSAT, который содержит изображения различных классов с высоким разрешением, снимаемых со спутника.

2. Реализация класса Dataset:
Для разделения данных на обучающую, валидационную и тестовую выборки мы создали собственный класс EuroSATDataset.
Этот класс наследуется от torch.utils.data.Dataset и реализует методы __init__, __len__ и __getitem__.
В методе __init__ мы передали пути к CSV-файлу с метками и папке с изображениями. Загрузили CSV-файл с помощью библиотеки pandas.
В методе __getitem__ мы использовали библиотеку torchvision для чтения изображений, а также применили преобразования,
такие как изменение размера и нормализация.

3. Создание DataLoader:
Затем мы создали DataLoader для каждой части набора данных (обучение, валидация, тестирование) с использованием ранее созданного класса Dataset.
DataLoader предоставляет удобный способ итерации по данным во время обучения модели.
Загрузка предобученной модели:

4. Мы использовали предобученную модель ResNet18/50/101/152 из библиотеки torchvision.models, заменили последний слой (fully connected layer) на слой,
соответствующий числу классов (в данном случае 10 классов для датасета EuroSAT).

Заморозили параметры всех слоев, кроме последнего классификационного слоя, чтобы сохранить предобученные веса.
Определили функцию потерь и оптимизатор для обучения модели.

5.Обучение и валидация:

Провели обучение модели на обучающей выборке с использованием DataLoader и валидацию на валидационной выборке. Следили за метриками, такими как потери и точность.
В итоге получили следующую точность на 15 эпохах:
Epoch 14/15, Loss: 1.5598, Validation Accuracy: 0.8165
Epoch 15/15, Loss: 0.1443, Validation Accuracy: 0.8200

6.Предсказание для пользовательской фотографии:
Создали функцию predict_image, которая принимает URL изображения, загружает его, преобразует и предсказывает класс с использованием обученной модели.

7.Отображение предсказаний:
Использовали библиотеку matplotlib для отображения  изображений и соответствующих им предсказанных классов.
